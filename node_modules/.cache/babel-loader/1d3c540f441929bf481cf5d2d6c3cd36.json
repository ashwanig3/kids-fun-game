{"ast":null,"code":"import _objectSpread from \"/home/ashwani/Documents/learn/kids-fun-game/kids-fun/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/ashwani/Documents/learn/kids-fun-game/kids-fun/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar initState = {\n  data: [],\n  attemptsLeft: 3,\n  dropObj: {\n    animals: [],\n    colours: [],\n    fruits: [],\n    numbers: []\n  },\n  correctAns: 0\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'STORE_DATA':\n      {\n        var shuffleArray = function shuffleArray(array) {\n          for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Math.random() * (i + 1));\n            var _ref = [array[j], array[i]];\n            array[i] = _ref[0];\n            array[j] = _ref[1];\n          }\n\n          return array;\n        };\n\n        var keys = Object.keys(action.value);\n        var objectToBeReturend = {};\n        var valuesArr = [];\n\n        for (var _i = 0; _i < keys.length; _i++) {\n          var key = keys[_i];\n          valuesArr = action.value[key];\n          var firstThree = [];\n\n          for (var i = 0; i < 3; i++) {\n            firstThree.push(valuesArr[i]);\n          }\n\n          objectToBeReturend[key] = firstThree;\n        }\n\n        var newArr = _toConsumableArray(objectToBeReturend.Fruits).concat(_toConsumableArray(objectToBeReturend.Animals), _toConsumableArray(objectToBeReturend.Colours), _toConsumableArray(objectToBeReturend.Numbers));\n\n        var randomArr = shuffleArray(newArr);\n        var mappedArr = randomArr.map(function (item, id) {\n          return _objectSpread({}, item, {\n            id: id\n          });\n        });\n        return {\n          data: mappedArr,\n          attemptsLeft: 3,\n          dropObj: {\n            animals: [],\n            colours: [],\n            fruits: [],\n            numbers: []\n          },\n          correctAns: null\n        };\n      }\n\n    case 'ON_DROP':\n      {\n        var itemsArr = _toConsumableArray(state.data);\n\n        var _valuesArr = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = itemsArr[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _item = _step.value;\n\n            _valuesArr.push(_item.value);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        var index = _valuesArr.indexOf(action.value);\n\n        var item = itemsArr[index];\n\n        var droppedObject = _objectSpread({}, state.dropObj);\n\n        var insertedArray = _toConsumableArray(droppedObject[item.type]).concat([item]);\n\n        droppedObject[item.type] = insertedArray;\n\n        var scoreArr = _toConsumableArray(state.dropObj.animals).concat(_toConsumableArray(state.dropObj.fruits), _toConsumableArray(state.dropObj.numbers), _toConsumableArray(state.dropObj.colours));\n\n        var scoreCount = (scoreArr.length + 1) * 10;\n        var dropElement = itemsArr.splice(index, 1);\n        return _objectSpread({}, state, {\n          data: itemsArr,\n          dropObj: droppedObject,\n          correctAns: scoreCount\n        });\n      }\n\n    case 'DECREASE_ATTEMPT':\n      {\n        return _objectSpread({}, state, {\n          attemptsLeft: --state.attemptsLeft\n        });\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/ashwani/Documents/learn/kids-fun-game/kids-fun/src/reducers/index.js"],"names":["initState","data","attemptsLeft","dropObj","animals","colours","fruits","numbers","correctAns","state","action","type","shuffleArray","array","i","length","j","Math","floor","random","keys","Object","value","objectToBeReturend","valuesArr","key","firstThree","push","newArr","Fruits","Animals","Colours","Numbers","randomArr","mappedArr","map","item","id","itemsArr","index","indexOf","droppedObject","insertedArray","scoreArr","scoreCount","dropElement","splice"],"mappings":"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","sourcesContent":["const initState = { \n\tdata : [], \n\tattemptsLeft : 3,\n\tdropObj: {\n\t\tanimals :[],\n\t\tcolours : [],\n\t\tfruits : [],\n\t\tnumbers : []\n\t},\n\tcorrectAns: 0\n}\n\nexport default (state=initState, action) => {\n\tswitch(action.type) {\n\t\tcase 'STORE_DATA':\n\t\t{\n\n\t\t\tconst keys = Object.keys(action.value);\n\t\t\t\n\t\t\tfunction shuffleArray(array) {\n\t\t\t\tfor (let i = array.length - 1; i > 0; i--) {\n\t\t\t\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t\t\t\t[array[i], array[j]] = [array[j], array[i]];\n\t\t\t\t}\n\t\t\t\treturn array;\n\t\t\t}\n\n\t\t\tconst objectToBeReturend = {}\n\t\t\tvar valuesArr = [];\n\t\t\tfor(const key of keys) {\n\t\t\t\tvaluesArr = action.value[key];\n\t\t\t\tvar firstThree = []\n\t\t\t\tfor(let i = 0; i < 3; i++) {\n\t\t\t\t\tfirstThree.push(valuesArr[i])\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tobjectToBeReturend[key] = firstThree;\n\t\t\t}\n\t\t\tvar newArr = [...objectToBeReturend.Fruits, ...objectToBeReturend.Animals, ...objectToBeReturend.Colours, ...objectToBeReturend.Numbers]\n\n\n\t\t\tconst randomArr = shuffleArray(newArr)\n\n\t\t\tvar mappedArr = randomArr.map((item,id) => {\n\t\t\t\treturn {\n\t\t\t\t\t...item,\t\n\t\t\t\t\tid\n\t\t\t\t}\n\t\t\t})\n\n\t\t\treturn {\n\t\t\t\tdata: mappedArr,\n\t\t\t\tattemptsLeft : 3,\n\t\t\t\tdropObj : {animals :[],\n\t\t\t\t\t\t\tcolours : [],\n\t\t\t\t\t\t\tfruits : [],\n\t\t\t\t\t\t\tnumbers : []\n\t\t\t\t\t\t},\n\t\t\t\tcorrectAns: null \n\t\t\t}\n\n\t\t}\n\t\tcase 'ON_DROP': {\n\t\t\tconst itemsArr = [...state.data];\n\n\t\t\tlet valuesArr = []\n\t\t\tfor(const item of itemsArr) {\n\t\t\t\tvaluesArr.push(item.value)\n\t\t\t}\n\n\t\t\tconst index = valuesArr.indexOf(action.value)\n\n\t\t\tconst item = itemsArr[index];\n\n\t\t\tconst droppedObject = {...state.dropObj};\n\n\t\t\tlet insertedArray = [...droppedObject[item.type], item];\n\n\t\t\tdroppedObject[item.type] = insertedArray;\n\t\t\tlet scoreArr = \t[\n\t\t\t\t\t\t\t\t...state.dropObj.animals,\n\t\t\t\t\t\t\t\t...state.dropObj.fruits,\n\t\t\t\t\t\t\t\t...state.dropObj.numbers,\n\t\t\t\t\t\t\t\t...state.dropObj.colours\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\n\t\t\tlet scoreCount = (scoreArr.length + 1) * 10;\n\t\t\t\n\t\n\n\t\t\tlet dropElement = itemsArr.splice(index, 1);\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdata : itemsArr,\n\t\t\t\tdropObj : droppedObject,\n\t\t\t\tcorrectAns: scoreCount\n\t\t\t}\n\t\t}\n\t\tcase 'DECREASE_ATTEMPT': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tattemptsLeft : --state.attemptsLeft\n\t\t\t}\n\t\t}\n\t\t\n\t\tdefault: return state;\n\t\t\n\t}\n}"]},"metadata":{},"sourceType":"module"}