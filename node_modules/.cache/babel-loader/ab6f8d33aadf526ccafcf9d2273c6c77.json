{"ast":null,"code":"import _classCallCheck from \"/home/ashwani/Documents/learn/kids-fun-game/kids-fun/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ashwani/Documents/learn/kids-fun-game/kids-fun/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ashwani/Documents/learn/kids-fun-game/kids-fun/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ashwani/Documents/learn/kids-fun-game/kids-fun/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ashwani/Documents/learn/kids-fun-game/kids-fun/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ashwani/Documents/learn/kids-fun-game/kids-fun/src/components/dragElement.js\";\nimport React, { Component } from 'react';\nimport { DragSource } from 'react-dnd';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { decreaseAttempt } from '../Actions/actions';\nvar scoreCount = 0;\nvar itemSource = {\n  beginDrag: function beginDrag(props) {\n    console.log(\"dragging\");\n    var itemVal = {\n      item: props.item\n    };\n    return itemVal;\n  },\n  endDrag: function endDrag(props, monitor) {\n    if (!monitor.didDrop()) {\n      props.dispatch(decreaseAttempt());\n      console.log(props);\n      return;\n    }\n\n    return props.handleDrop(props.item);\n  }\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nfunction forType(props) {\n  return props.type;\n}\n\nvar DragElement =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DragElement, _Component);\n\n  function DragElement(props) {\n    _classCallCheck(this, DragElement);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DragElement).call(this, props));\n  }\n\n  _createClass(DragElement, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          items = _this$props.items,\n          isDragging = _this$props.isDragging,\n          connectDragSource = _this$props.connectDragSource;\n      var opacity = isDragging ? 0 : 1; // if(attemptsLeft <= 0) {\n      //     return <div>Game Over</div>\n      // }\n\n      return connectDragSource(React.createElement(\"div\", {\n        className: \"main-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"stuff\",\n        style: {\n          opacity: opacity\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.props.item))));\n    }\n  }]);\n\n  return DragElement;\n}(Component); // const mapDispatchToProps = (dispatch) => {\n//     return {\n//         decrease : () => dispatch(decreaseAttempt()),\n//         dispatch\n//     }\n// } \n\n\nexport default compose(DragSource(forType, itemSource, collect), connect())(DragElement);","map":{"version":3,"sources":["/home/ashwani/Documents/learn/kids-fun-game/kids-fun/src/components/dragElement.js"],"names":["React","Component","DragSource","compose","connect","decreaseAttempt","scoreCount","itemSource","beginDrag","props","console","log","itemVal","item","endDrag","monitor","didDrop","dispatch","handleDrop","collect","connectDragSource","dragSource","connectDragPreview","dragPreview","isDragging","forType","type","DragElement","items","opacity"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,eAAT,QAAgC,oBAAhC;AAEA,IAAIC,UAAU,GAAG,CAAjB;AAEA,IAAMC,UAAU,GAAG;AACfC,EAAAA,SADe,qBACLC,KADK,EACE;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,QAAMC,OAAO,GAAG;AACZC,MAAAA,IAAI,EAAEJ,KAAK,CAACI;AADA,KAAhB;AAGA,WAAOD,OAAP;AAEH,GARc;AASfE,EAAAA,OATe,mBASPL,KATO,EASAM,OATA,EASS;AACpB,QAAG,CAACA,OAAO,CAACC,OAAR,EAAJ,EAAuB;AACnBP,MAAAA,KAAK,CAACQ,QAAN,CAAeZ,eAAe,EAA9B;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;AACH;;AAEF,WAAOA,KAAK,CAACS,UAAN,CAAiBT,KAAK,CAACI,IAAvB,CAAP;AACF;AAjBc,CAAnB;;AAsBA,SAASM,OAAT,CAAiBf,OAAjB,EAA0BW,OAA1B,EAAmC;AAC/B,SAAO;AACHK,IAAAA,iBAAiB,EAAEhB,OAAO,CAACiB,UAAR,EADhB;AAEHC,IAAAA,kBAAkB,EAAElB,OAAO,CAACmB,WAAR,EAFjB;AAGHC,IAAAA,UAAU,EAAET,OAAO,CAACS,UAAR;AAHT,GAAP;AAKH;;AACD,SAASC,OAAT,CAAiBhB,KAAjB,EAAwB;AACpB,SAAOA,KAAK,CAACiB,IAAb;AACH;;IAEKC,W;;;;;AACF,uBAAYlB,KAAZ,EAAmB;AAAA;;AAAA,oFACTA,KADS;AAElB;;;;6BACM;AAAA,wBAC0C,KAAKA,KAD/C;AAAA,UACCmB,KADD,eACCA,KADD;AAAA,UACQJ,UADR,eACQA,UADR;AAAA,UACoBJ,iBADpB,eACoBA,iBADpB;AAEP,UAAMS,OAAO,GAAGL,UAAU,GAAG,CAAH,GAAO,CAAjC,CAFO,CAGP;AACA;AACA;;AACI,aAAOJ,iBAAiB,CACrB;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,KAAK,EAAE;AAACS,UAAAA,OAAO,EAAPA;AAAD,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0C,KAAKpB,KAAL,CAAWI,IAArD,CADJ,CADD,CADqB,CAAxB;AAOL;;;;EAjBuBZ,S,GAqB1B;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeE,OAAO,CAClBD,UAAU,CAACuB,OAAD,EAAUlB,UAAV,EAAsBY,OAAtB,CADQ,EAElBf,OAAO,EAFW,CAAP,CAGbuB,WAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { DragSource } from 'react-dnd';\nimport { compose } from 'redux';\nimport {connect} from 'react-redux'\nimport { decreaseAttempt } from '../Actions/actions';\n\nlet scoreCount = 0; \n\nconst itemSource = {\n    beginDrag(props) {\n        console.log(\"dragging\")\n        const itemVal = {\n            item: props.item\n        }\n        return itemVal\n\n    },\n    endDrag(props, monitor) {\n        if(!monitor.didDrop()) {\n            props.dispatch(decreaseAttempt())\n            console.log(props)\n            return;\n        }\n\n       return props.handleDrop(props.item)\n    }\n}\n\n\n\nfunction collect(connect, monitor) {\n    return {\n        connectDragSource: connect.dragSource(),\n        connectDragPreview: connect.dragPreview(),\n        isDragging: monitor.isDragging()\n    }\n}\nfunction forType(props) {\n    return props.type;\n}\n\nclass DragElement extends Component {\n    constructor(props) {\n        super(props);\n    }\n  render() {\n    const { items, isDragging, connectDragSource } = this.props;\n    const opacity = isDragging ? 0 : 1;\n    // if(attemptsLeft <= 0) {\n    //     return <div>Game Over</div>\n    // }\n        return connectDragSource(\n           <div className=\"main-container\">\t\t\n           \t<div>\n                <div className=\"stuff\" style={{opacity}}>{this.props.item}</div>\n           \t</div>\n           </div> \n    )\n  }\n}\n\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         decrease : () => dispatch(decreaseAttempt()),\n//         dispatch\n//     }\n// } \n\nexport default compose(\n    DragSource(forType, itemSource, collect),\n    connect()\n)(DragElement)\n"]},"metadata":{},"sourceType":"module"}