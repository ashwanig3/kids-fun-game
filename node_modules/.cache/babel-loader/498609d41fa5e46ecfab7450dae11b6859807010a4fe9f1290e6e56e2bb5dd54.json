{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar invariant = require('invariant');\nvar isCallingCanDrag = false;\nvar isCallingIsDragging = false;\nvar SourceMonitor = /** @class */function () {\n  function SourceMonitor(manager) {\n    this.internalMonitor = manager.getMonitor();\n  }\n  SourceMonitor.prototype.receiveHandlerId = function (sourceId) {\n    this.sourceId = sourceId;\n  };\n  SourceMonitor.prototype.canDrag = function () {\n    invariant(!isCallingCanDrag, 'You may not call monitor.canDrag() inside your canDrag() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs-drag-source-monitor.html');\n    try {\n      isCallingCanDrag = true;\n      return this.internalMonitor.canDragSource(this.sourceId);\n    } finally {\n      isCallingCanDrag = false;\n    }\n  };\n  SourceMonitor.prototype.isDragging = function () {\n    invariant(!isCallingIsDragging, 'You may not call monitor.isDragging() inside your isDragging() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs-drag-source-monitor.html');\n    try {\n      isCallingIsDragging = true;\n      return this.internalMonitor.isDraggingSource(this.sourceId);\n    } finally {\n      isCallingIsDragging = false;\n    }\n  };\n  SourceMonitor.prototype.subscribeToStateChange = function (listener, options) {\n    return this.internalMonitor.subscribeToStateChange(listener, options);\n  };\n  SourceMonitor.prototype.isDraggingSource = function (sourceId) {\n    return this.internalMonitor.isDraggingSource(sourceId);\n  };\n  SourceMonitor.prototype.isOverTarget = function (targetId, options) {\n    return this.internalMonitor.isOverTarget(targetId, options);\n  };\n  SourceMonitor.prototype.getTargetIds = function () {\n    return this.internalMonitor.getTargetIds();\n  };\n  SourceMonitor.prototype.isSourcePublic = function () {\n    return this.internalMonitor.isSourcePublic();\n  };\n  SourceMonitor.prototype.getSourceId = function () {\n    return this.internalMonitor.getSourceId();\n  };\n  SourceMonitor.prototype.subscribeToOffsetChange = function (listener) {\n    return this.internalMonitor.subscribeToOffsetChange(listener);\n  };\n  SourceMonitor.prototype.canDragSource = function (sourceId) {\n    return this.internalMonitor.canDragSource(sourceId);\n  };\n  SourceMonitor.prototype.canDropOnTarget = function (targetId) {\n    return this.internalMonitor.canDropOnTarget(targetId);\n  };\n  SourceMonitor.prototype.getItemType = function () {\n    return this.internalMonitor.getItemType();\n  };\n  SourceMonitor.prototype.getItem = function () {\n    return this.internalMonitor.getItem();\n  };\n  SourceMonitor.prototype.getDropResult = function () {\n    return this.internalMonitor.getDropResult();\n  };\n  SourceMonitor.prototype.didDrop = function () {\n    return this.internalMonitor.didDrop();\n  };\n  SourceMonitor.prototype.getInitialClientOffset = function () {\n    return this.internalMonitor.getInitialClientOffset();\n  };\n  SourceMonitor.prototype.getInitialSourceClientOffset = function () {\n    return this.internalMonitor.getInitialSourceClientOffset();\n  };\n  SourceMonitor.prototype.getSourceClientOffset = function () {\n    return this.internalMonitor.getSourceClientOffset();\n  };\n  SourceMonitor.prototype.getClientOffset = function () {\n    return this.internalMonitor.getClientOffset();\n  };\n  SourceMonitor.prototype.getDifferenceFromInitialOffset = function () {\n    return this.internalMonitor.getDifferenceFromInitialOffset();\n  };\n  return SourceMonitor;\n}();\nfunction createSourceMonitor(manager) {\n  return new SourceMonitor(manager);\n}\nexports.default = createSourceMonitor;","map":{"version":3,"names":["Object","defineProperty","exports","value","invariant","require","isCallingCanDrag","isCallingIsDragging","SourceMonitor","manager","internalMonitor","getMonitor","prototype","receiveHandlerId","sourceId","canDrag","canDragSource","isDragging","isDraggingSource","subscribeToStateChange","listener","options","isOverTarget","targetId","getTargetIds","isSourcePublic","getSourceId","subscribeToOffsetChange","canDropOnTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset","createSourceMonitor","default"],"sources":["/Users/vishalgoswami/Documents/work/my-repo/kids-fun-game/node_modules/.pnpm/react-dnd@6.0.0_react@18.3.1/node_modules/react-dnd/lib/createSourceMonitor.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar invariant = require('invariant');\nvar isCallingCanDrag = false;\nvar isCallingIsDragging = false;\nvar SourceMonitor = /** @class */ (function () {\n    function SourceMonitor(manager) {\n        this.internalMonitor = manager.getMonitor();\n    }\n    SourceMonitor.prototype.receiveHandlerId = function (sourceId) {\n        this.sourceId = sourceId;\n    };\n    SourceMonitor.prototype.canDrag = function () {\n        invariant(!isCallingCanDrag, 'You may not call monitor.canDrag() inside your canDrag() implementation. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs-drag-source-monitor.html');\n        try {\n            isCallingCanDrag = true;\n            return this.internalMonitor.canDragSource(this.sourceId);\n        }\n        finally {\n            isCallingCanDrag = false;\n        }\n    };\n    SourceMonitor.prototype.isDragging = function () {\n        invariant(!isCallingIsDragging, 'You may not call monitor.isDragging() inside your isDragging() implementation. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs-drag-source-monitor.html');\n        try {\n            isCallingIsDragging = true;\n            return this.internalMonitor.isDraggingSource(this.sourceId);\n        }\n        finally {\n            isCallingIsDragging = false;\n        }\n    };\n    SourceMonitor.prototype.subscribeToStateChange = function (listener, options) {\n        return this.internalMonitor.subscribeToStateChange(listener, options);\n    };\n    SourceMonitor.prototype.isDraggingSource = function (sourceId) {\n        return this.internalMonitor.isDraggingSource(sourceId);\n    };\n    SourceMonitor.prototype.isOverTarget = function (targetId, options) {\n        return this.internalMonitor.isOverTarget(targetId, options);\n    };\n    SourceMonitor.prototype.getTargetIds = function () {\n        return this.internalMonitor.getTargetIds();\n    };\n    SourceMonitor.prototype.isSourcePublic = function () {\n        return this.internalMonitor.isSourcePublic();\n    };\n    SourceMonitor.prototype.getSourceId = function () {\n        return this.internalMonitor.getSourceId();\n    };\n    SourceMonitor.prototype.subscribeToOffsetChange = function (listener) {\n        return this.internalMonitor.subscribeToOffsetChange(listener);\n    };\n    SourceMonitor.prototype.canDragSource = function (sourceId) {\n        return this.internalMonitor.canDragSource(sourceId);\n    };\n    SourceMonitor.prototype.canDropOnTarget = function (targetId) {\n        return this.internalMonitor.canDropOnTarget(targetId);\n    };\n    SourceMonitor.prototype.getItemType = function () {\n        return this.internalMonitor.getItemType();\n    };\n    SourceMonitor.prototype.getItem = function () {\n        return this.internalMonitor.getItem();\n    };\n    SourceMonitor.prototype.getDropResult = function () {\n        return this.internalMonitor.getDropResult();\n    };\n    SourceMonitor.prototype.didDrop = function () {\n        return this.internalMonitor.didDrop();\n    };\n    SourceMonitor.prototype.getInitialClientOffset = function () {\n        return this.internalMonitor.getInitialClientOffset();\n    };\n    SourceMonitor.prototype.getInitialSourceClientOffset = function () {\n        return this.internalMonitor.getInitialSourceClientOffset();\n    };\n    SourceMonitor.prototype.getSourceClientOffset = function () {\n        return this.internalMonitor.getSourceClientOffset();\n    };\n    SourceMonitor.prototype.getClientOffset = function () {\n        return this.internalMonitor.getClientOffset();\n    };\n    SourceMonitor.prototype.getDifferenceFromInitialOffset = function () {\n        return this.internalMonitor.getDifferenceFromInitialOffset();\n    };\n    return SourceMonitor;\n}());\nfunction createSourceMonitor(manager) {\n    return new SourceMonitor(manager);\n}\nexports.default = createSourceMonitor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}