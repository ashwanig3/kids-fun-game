{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar MonotonicInterpolant = /** @class */function () {\n  function MonotonicInterpolant(xs, ys) {\n    var length = xs.length;\n    // Rearrange xs and ys so that xs is sorted\n    var indexes = [];\n    for (var i = 0; i < length; i++) {\n      indexes.push(i);\n    }\n    indexes.sort(function (a, b) {\n      return xs[a] < xs[b] ? -1 : 1;\n    });\n    // Get consecutive differences and slopes\n    var dys = [];\n    var dxs = [];\n    var ms = [];\n    var dx;\n    var dy;\n    for (var i = 0; i < length - 1; i++) {\n      dx = xs[i + 1] - xs[i];\n      dy = ys[i + 1] - ys[i];\n      dxs.push(dx);\n      dys.push(dy);\n      ms.push(dy / dx);\n    }\n    // Get degree-1 coefficients\n    var c1s = [ms[0]];\n    for (var i = 0; i < dxs.length - 1; i++) {\n      var m2 = ms[i];\n      var mNext = ms[i + 1];\n      if (m2 * mNext <= 0) {\n        c1s.push(0);\n      } else {\n        dx = dxs[i];\n        var dxNext = dxs[i + 1];\n        var common = dx + dxNext;\n        c1s.push(3 * common / ((common + dxNext) / m2 + (common + dx) / mNext));\n      }\n    }\n    c1s.push(ms[ms.length - 1]);\n    // Get degree-2 and degree-3 coefficients\n    var c2s = [];\n    var c3s = [];\n    var m;\n    for (var i = 0; i < c1s.length - 1; i++) {\n      m = ms[i];\n      var c1 = c1s[i];\n      var invDx = 1 / dxs[i];\n      var common = c1 + c1s[i + 1] - m - m;\n      c2s.push((m - c1 - common) * invDx);\n      c3s.push(common * invDx * invDx);\n    }\n    this.xs = xs;\n    this.ys = ys;\n    this.c1s = c1s;\n    this.c2s = c2s;\n    this.c3s = c3s;\n  }\n  MonotonicInterpolant.prototype.interpolate = function (x) {\n    var _a = this,\n      xs = _a.xs,\n      ys = _a.ys,\n      c1s = _a.c1s,\n      c2s = _a.c2s,\n      c3s = _a.c3s;\n    // The rightmost point in the dataset should give an exact result\n    var i = xs.length - 1;\n    if (x === xs[i]) {\n      return ys[i];\n    }\n    // Search for the interval x is in, returning the corresponding y if x is one of the original xs\n    var low = 0;\n    var high = c3s.length - 1;\n    var mid;\n    while (low <= high) {\n      mid = Math.floor(0.5 * (low + high));\n      var xHere = xs[mid];\n      if (xHere < x) {\n        low = mid + 1;\n      } else if (xHere > x) {\n        high = mid - 1;\n      } else {\n        return ys[mid];\n      }\n    }\n    i = Math.max(0, high);\n    // Interpolate\n    var diff = x - xs[i];\n    var diffSq = diff * diff;\n    return ys[i] + c1s[i] * diff + c2s[i] * diffSq + c3s[i] * diff * diffSq;\n  };\n  return MonotonicInterpolant;\n}();\nexports.default = MonotonicInterpolant;","map":{"version":3,"names":["Object","defineProperty","exports","value","MonotonicInterpolant","xs","ys","length","indexes","i","push","sort","a","b","dys","dxs","ms","dx","dy","c1s","m2","mNext","dxNext","common","c2s","c3s","m","c1","invDx","prototype","interpolate","x","_a","low","high","mid","Math","floor","xHere","max","diff","diffSq","default"],"sources":["/Users/vishalgoswami/Documents/work/my-repo/kids-fun-game/node_modules/.pnpm/react-dnd-html5-backend@6.0.0/node_modules/react-dnd-html5-backend/lib/MonotonicInterpolant.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MonotonicInterpolant = /** @class */ (function () {\n    function MonotonicInterpolant(xs, ys) {\n        var length = xs.length;\n        // Rearrange xs and ys so that xs is sorted\n        var indexes = [];\n        for (var i = 0; i < length; i++) {\n            indexes.push(i);\n        }\n        indexes.sort(function (a, b) { return (xs[a] < xs[b] ? -1 : 1); });\n        // Get consecutive differences and slopes\n        var dys = [];\n        var dxs = [];\n        var ms = [];\n        var dx;\n        var dy;\n        for (var i = 0; i < length - 1; i++) {\n            dx = xs[i + 1] - xs[i];\n            dy = ys[i + 1] - ys[i];\n            dxs.push(dx);\n            dys.push(dy);\n            ms.push(dy / dx);\n        }\n        // Get degree-1 coefficients\n        var c1s = [ms[0]];\n        for (var i = 0; i < dxs.length - 1; i++) {\n            var m2 = ms[i];\n            var mNext = ms[i + 1];\n            if (m2 * mNext <= 0) {\n                c1s.push(0);\n            }\n            else {\n                dx = dxs[i];\n                var dxNext = dxs[i + 1];\n                var common = dx + dxNext;\n                c1s.push(3 * common / ((common + dxNext) / m2 + (common + dx) / mNext));\n            }\n        }\n        c1s.push(ms[ms.length - 1]);\n        // Get degree-2 and degree-3 coefficients\n        var c2s = [];\n        var c3s = [];\n        var m;\n        for (var i = 0; i < c1s.length - 1; i++) {\n            m = ms[i];\n            var c1 = c1s[i];\n            var invDx = 1 / dxs[i];\n            var common = c1 + c1s[i + 1] - m - m;\n            c2s.push((m - c1 - common) * invDx);\n            c3s.push(common * invDx * invDx);\n        }\n        this.xs = xs;\n        this.ys = ys;\n        this.c1s = c1s;\n        this.c2s = c2s;\n        this.c3s = c3s;\n    }\n    MonotonicInterpolant.prototype.interpolate = function (x) {\n        var _a = this, xs = _a.xs, ys = _a.ys, c1s = _a.c1s, c2s = _a.c2s, c3s = _a.c3s;\n        // The rightmost point in the dataset should give an exact result\n        var i = xs.length - 1;\n        if (x === xs[i]) {\n            return ys[i];\n        }\n        // Search for the interval x is in, returning the corresponding y if x is one of the original xs\n        var low = 0;\n        var high = c3s.length - 1;\n        var mid;\n        while (low <= high) {\n            mid = Math.floor(0.5 * (low + high));\n            var xHere = xs[mid];\n            if (xHere < x) {\n                low = mid + 1;\n            }\n            else if (xHere > x) {\n                high = mid - 1;\n            }\n            else {\n                return ys[mid];\n            }\n        }\n        i = Math.max(0, high);\n        // Interpolate\n        var diff = x - xs[i];\n        var diffSq = diff * diff;\n        return ys[i] + c1s[i] * diff + c2s[i] * diffSq + c3s[i] * diff * diffSq;\n    };\n    return MonotonicInterpolant;\n}());\nexports.default = MonotonicInterpolant;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}