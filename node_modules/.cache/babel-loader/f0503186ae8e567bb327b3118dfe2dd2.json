{"ast":null,"code":"import _objectSpread from \"/home/ashwani/Documents/learn/kids-fun-game/kids-fun/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/ashwani/Documents/learn/kids-fun-game/kids-fun/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar initState = {\n  data: [],\n  attemptsLeft: 3\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'STORE_DATA':\n      {\n        var shuffleArray = function shuffleArray(array) {\n          for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Math.random() * (i + 1));\n            var _ref = [array[j], array[i]];\n            array[i] = _ref[0];\n            array[j] = _ref[1];\n          }\n\n          return array;\n        };\n\n        var keys = Object.keys(action.value);\n        var objectToBeReturend = {};\n        var randomArr = [];\n        var valuesArr = [];\n\n        for (var _i = 0; _i < keys.length; _i++) {\n          var key = keys[_i];\n          valuesArr = action.value[key];\n          randomArr = shuffleArray(valuesArr);\n          objectToBeReturend[key] = randomArr;\n          randomArr = [];\n        }\n\n        var newArr = _toConsumableArray(objectToBeReturend.Fruits).concat(_toConsumableArray(objectToBeReturend.Animals), _toConsumableArray(objectToBeReturend.Colours), _toConsumableArray(objectToBeReturend.Numbers));\n\n        var mappedArr = newArr.map(function (item, id) {\n          return _objectSpread({}, item, {\n            id: id\n          });\n        });\n        return {\n          data: mappedArr,\n          attemptsLeft: 3\n        };\n      }\n\n    case 'ON_DROP':\n      {\n        var itemsArr = _toConsumableArray(state.data);\n\n        itemsArr.splice(action.id, 1);\n        return _objectSpread({}, state, {\n          data: itemsArr\n        });\n      }\n\n    case 'DECREASE_ATTEMPT':\n      {\n        return _objectSpread({}, state, {\n          attemptsLeft: --state.attemptsLeft\n        });\n      }\n\n    case \"SET_INITIAL_ATTEMPT\":\n      {\n        return _objectSpread({}, state, {\n          attemptsLeft: 3\n        });\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/ashwani/Documents/learn/kids-fun-game/kids-fun/src/reducers/index.js"],"names":["initState","data","attemptsLeft","state","action","type","shuffleArray","array","i","length","j","Math","floor","random","keys","Object","value","objectToBeReturend","randomArr","valuesArr","key","newArr","Fruits","Animals","Colours","Numbers","mappedArr","map","item","id","itemsArr","splice"],"mappings":";;AAAA,IAAMA,SAAS,GAAG;AACjBC,EAAAA,IAAI,EAAG,EADU;AAEjBC,EAAAA,YAAY,EAAG;AAFE,CAAlB;AAKA,gBAAe,YAA6B;AAAA,MAA5BC,KAA4B,uEAAtBH,SAAsB;AAAA,MAAXI,MAAW;;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACC,SAAK,YAAL;AACA;AAAA,YAIUC,YAJV,GAIC,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC5B,eAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAA5B,EAA+BD,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AAC1C,gBAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AAD0C,uBAEnB,CAACD,KAAK,CAACG,CAAD,CAAN,EAAWH,KAAK,CAACC,CAAD,CAAhB,CAFmB;AAEzCD,YAAAA,KAAK,CAACC,CAAD,CAFoC;AAE/BD,YAAAA,KAAK,CAACG,CAAD,CAF0B;AAG1C;;AACD,iBAAOH,KAAP;AACA,SAVF;;AAEC,YAAMO,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYV,MAAM,CAACY,KAAnB,CAAb;AAUA,YAAMC,kBAAkB,GAAG,EAA3B;AACA,YAAIC,SAAS,GAAG,EAAhB;AACA,YAAIC,SAAS,GAAG,EAAhB;;AACA,8BAAiBL,IAAjB,eAAuB;AAAnB,cAAMM,GAAG,GAAIN,IAAJ,IAAT;AACHK,UAAAA,SAAS,GAAGf,MAAM,CAACY,KAAP,CAAaI,GAAb,CAAZ;AACAF,UAAAA,SAAS,GAAGZ,YAAY,CAACa,SAAD,CAAxB;AACAF,UAAAA,kBAAkB,CAACG,GAAD,CAAlB,GAA0BF,SAA1B;AACAA,UAAAA,SAAS,GAAG,EAAZ;AACA;;AACD,YAAIG,MAAM,sBAAOJ,kBAAkB,CAACK,MAA1B,4BAAqCL,kBAAkB,CAACM,OAAxD,sBAAoEN,kBAAkB,CAACO,OAAvF,sBAAmGP,kBAAkB,CAACQ,OAAtH,EAAV;;AAEA,YAAIC,SAAS,GAAGL,MAAM,CAACM,GAAP,CAAW,UAACC,IAAD,EAAMC,EAAN,EAAa;AACvC,mCACID,IADJ;AAECC,YAAAA,EAAE,EAAFA;AAFD;AAIA,SALe,CAAhB;AAOA,eAAO;AACN5B,UAAAA,IAAI,EAAEyB,SADA;AAENxB,UAAAA,YAAY,EAAG;AAFT,SAAP;AAKA;;AACD,SAAK,SAAL;AAAgB;AACf,YAAM4B,QAAQ,sBAAO3B,KAAK,CAACF,IAAb,CAAd;;AAEA6B,QAAAA,QAAQ,CAACC,MAAT,CAAgB3B,MAAM,CAACyB,EAAvB,EAA2B,CAA3B;AAEA,iCACI1B,KADJ;AAECF,UAAAA,IAAI,EAAG6B;AAFR;AAIA;;AACD,SAAK,kBAAL;AAAyB;AACxB,iCACI3B,KADJ;AAECD,UAAAA,YAAY,EAAG,EAAEC,KAAK,CAACD;AAFxB;AAIA;;AACD,SAAK,qBAAL;AAA4B;AAC3B,iCACIC,KADJ;AAECD,UAAAA,YAAY,EAAG;AAFhB;AAIA;;AACD;AAAS,aAAOC,KAAP;AA5DV;AA+DA,CAhED","sourcesContent":["const initState = { \n\tdata : [], \n\tattemptsLeft : 3\n}\n\nexport default (state=initState, action) => {\n\tswitch(action.type) {\n\t\tcase 'STORE_DATA':\n\t\t{\n\n\t\t\tconst keys = Object.keys(action.value);\n\t\t\t\n\t\t\tfunction shuffleArray(array) {\n\t\t\t\tfor (let i = array.length - 1; i > 0; i--) {\n\t\t\t\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t\t\t\t[array[i], array[j]] = [array[j], array[i]];\n\t\t\t\t}\n\t\t\t\treturn array;\n\t\t\t}\n\n\t\t\tconst objectToBeReturend = {}\n\t\t\tvar randomArr = [];\n\t\t\tvar valuesArr = [];\n\t\t\tfor(const key of keys) {\n\t\t\t\tvaluesArr = action.value[key];\n\t\t\t\trandomArr = shuffleArray(valuesArr) \t\n\t\t\t\tobjectToBeReturend[key] = randomArr;\n\t\t\t\trandomArr = []\n\t\t\t}\n\t\t\tvar newArr = [...objectToBeReturend.Fruits, ...objectToBeReturend.Animals, ...objectToBeReturend.Colours, ...objectToBeReturend.Numbers]\n\n\t\t\tvar mappedArr = newArr.map((item,id) => {\n\t\t\t\treturn {\n\t\t\t\t\t...item,\t\n\t\t\t\t\tid\n\t\t\t\t}\n\t\t\t})\n\n\t\t\treturn {\n\t\t\t\tdata: mappedArr,\n\t\t\t\tattemptsLeft : 3\n\t\t\t}\n\n\t\t}\n\t\tcase 'ON_DROP': {\n\t\t\tconst itemsArr = [...state.data];\n\n\t\t\titemsArr.splice(action.id, 1);\n\t\t\t\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdata : itemsArr\n\t\t\t}\n\t\t}\n\t\tcase 'DECREASE_ATTEMPT': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tattemptsLeft : --state.attemptsLeft\n\t\t\t}\n\t\t}\n\t\tcase \"SET_INITIAL_ATTEMPT\": {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tattemptsLeft : 3\n\t\t\t}\n\t\t} \n\t\tdefault: return state;\n\t\t\n\t}\n}"]},"metadata":{},"sourceType":"module"}