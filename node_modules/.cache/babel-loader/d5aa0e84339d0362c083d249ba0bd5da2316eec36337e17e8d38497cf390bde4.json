{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar matchesType_1 = require(\"../../utils/matchesType\");\nvar types_1 = require(\"./types\");\nvar invariant = require('invariant');\nfunction createHover(manager) {\n  return function hover(targetIdsArg, _a) {\n    var clientOffset = (_a === void 0 ? {} : _a).clientOffset;\n    verifyTargetIdsIsArray(targetIdsArg);\n    var targetIds = targetIdsArg.slice(0);\n    var monitor = manager.getMonitor();\n    var registry = manager.getRegistry();\n    checkInvariants(targetIds, monitor, registry);\n    var draggedItemType = monitor.getItemType();\n    removeNonMatchingTargetIds(targetIds, registry, draggedItemType);\n    hoverAllTargets(targetIds, monitor, registry);\n    return {\n      type: types_1.HOVER,\n      payload: {\n        targetIds: targetIds,\n        clientOffset: clientOffset || null\n      }\n    };\n  };\n}\nexports.default = createHover;\nfunction verifyTargetIdsIsArray(targetIdsArg) {\n  invariant(Array.isArray(targetIdsArg), 'Expected targetIds to be an array.');\n}\nfunction checkInvariants(targetIds, monitor, registry) {\n  invariant(monitor.isDragging(), 'Cannot call hover while not dragging.');\n  invariant(!monitor.didDrop(), 'Cannot call hover after drop.');\n  for (var i = 0; i < targetIds.length; i++) {\n    var targetId = targetIds[i];\n    invariant(targetIds.lastIndexOf(targetId) === i, 'Expected targetIds to be unique in the passed array.');\n    var target = registry.getTarget(targetId);\n    invariant(target, 'Expected targetIds to be registered.');\n  }\n}\nfunction removeNonMatchingTargetIds(targetIds, registry, draggedItemType) {\n  // Remove those targetIds that don't match the targetType.  This\n  // fixes shallow isOver which would only be non-shallow because of\n  // non-matching targets.\n  for (var i = targetIds.length - 1; i >= 0; i--) {\n    var targetId = targetIds[i];\n    var targetType = registry.getTargetType(targetId);\n    if (!matchesType_1.default(targetType, draggedItemType)) {\n      targetIds.splice(i, 1);\n    }\n  }\n}\nfunction hoverAllTargets(targetIds, monitor, registry) {\n  // Finally call hover on all matching targets.\n  for (var _i = 0, targetIds_1 = targetIds; _i < targetIds_1.length; _i++) {\n    var targetId = targetIds_1[_i];\n    var target = registry.getTarget(targetId);\n    target.hover(monitor, targetId);\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","matchesType_1","require","types_1","invariant","createHover","manager","hover","targetIdsArg","_a","clientOffset","verifyTargetIdsIsArray","targetIds","slice","monitor","getMonitor","registry","getRegistry","checkInvariants","draggedItemType","getItemType","removeNonMatchingTargetIds","hoverAllTargets","type","HOVER","payload","default","Array","isArray","isDragging","didDrop","i","length","targetId","lastIndexOf","target","getTarget","targetType","getTargetType","splice","_i","targetIds_1"],"sources":["/Users/vishalgoswami/Documents/work/my-repo/kids-fun-game/node_modules/.pnpm/dnd-core@6.0.0/node_modules/dnd-core/lib/actions/dragDrop/hover.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar matchesType_1 = require(\"../../utils/matchesType\");\nvar types_1 = require(\"./types\");\nvar invariant = require('invariant');\nfunction createHover(manager) {\n    return function hover(targetIdsArg, _a) {\n        var clientOffset = (_a === void 0 ? {} : _a).clientOffset;\n        verifyTargetIdsIsArray(targetIdsArg);\n        var targetIds = targetIdsArg.slice(0);\n        var monitor = manager.getMonitor();\n        var registry = manager.getRegistry();\n        checkInvariants(targetIds, monitor, registry);\n        var draggedItemType = monitor.getItemType();\n        removeNonMatchingTargetIds(targetIds, registry, draggedItemType);\n        hoverAllTargets(targetIds, monitor, registry);\n        return {\n            type: types_1.HOVER,\n            payload: {\n                targetIds: targetIds,\n                clientOffset: clientOffset || null,\n            },\n        };\n    };\n}\nexports.default = createHover;\nfunction verifyTargetIdsIsArray(targetIdsArg) {\n    invariant(Array.isArray(targetIdsArg), 'Expected targetIds to be an array.');\n}\nfunction checkInvariants(targetIds, monitor, registry) {\n    invariant(monitor.isDragging(), 'Cannot call hover while not dragging.');\n    invariant(!monitor.didDrop(), 'Cannot call hover after drop.');\n    for (var i = 0; i < targetIds.length; i++) {\n        var targetId = targetIds[i];\n        invariant(targetIds.lastIndexOf(targetId) === i, 'Expected targetIds to be unique in the passed array.');\n        var target = registry.getTarget(targetId);\n        invariant(target, 'Expected targetIds to be registered.');\n    }\n}\nfunction removeNonMatchingTargetIds(targetIds, registry, draggedItemType) {\n    // Remove those targetIds that don't match the targetType.  This\n    // fixes shallow isOver which would only be non-shallow because of\n    // non-matching targets.\n    for (var i = targetIds.length - 1; i >= 0; i--) {\n        var targetId = targetIds[i];\n        var targetType = registry.getTargetType(targetId);\n        if (!matchesType_1.default(targetType, draggedItemType)) {\n            targetIds.splice(i, 1);\n        }\n    }\n}\nfunction hoverAllTargets(targetIds, monitor, registry) {\n    // Finally call hover on all matching targets.\n    for (var _i = 0, targetIds_1 = targetIds; _i < targetIds_1.length; _i++) {\n        var targetId = targetIds_1[_i];\n        var target = registry.getTarget(targetId);\n        target.hover(monitor, targetId);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}