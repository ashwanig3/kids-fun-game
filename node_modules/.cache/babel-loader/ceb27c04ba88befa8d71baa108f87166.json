{"ast":null,"code":"import _objectSpread from \"/home/ashwani/Documents/learn/kids-fun-game/kids-fun/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/ashwani/Documents/learn/kids-fun-game/kids-fun/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar initState = {\n  data: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'STORE_DATA':\n      {\n        var randomIndex = function randomIndex() {\n          return Math.floor(Math.random() * 4);\n        };\n\n        var keys = Object.keys(action.value);\n        var objectToBeReturend = {};\n        var randomArr = [];\n        var valuesArr = [];\n\n        for (var _i = 0; _i < keys.length; _i++) {\n          var key = keys[_i];\n          valuesArr = action.value[key];\n\n          for (var j = 0; j < 2; j++) {\n            randomArr.push(valuesArr[randomIndex()]);\n          }\n\n          objectToBeReturend[key] = randomArr;\n          randomArr = [];\n        }\n\n        var newArr = _toConsumableArray(objectToBeReturend.Fruits).concat(_toConsumableArray(objectToBeReturend.Animals), _toConsumableArray(objectToBeReturend.Colours), _toConsumableArray(objectToBeReturend.Numbers));\n\n        var mappedArr = newArr.map(function (item, id) {\n          return _objectSpread({}, item, {\n            id: id\n          });\n        });\n        return {\n          data: _toConsumableArray(state.data).concat(_toConsumableArray(mappedArr))\n        };\n      }\n\n    case 'ON_DROP':\n      {\n        var itemsArr = _toConsumableArray(state.data);\n\n        itemsArr.splice(action.id, 1);\n        var mappedArr = itemsArr.map(function (item, i) {\n          return _objectSpread({}, item, {\n            i: i\n          });\n        });\n        return _objectSpread({}, state, {\n          data: mappedArr\n        });\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/ashwani/Documents/learn/kids-fun-game/kids-fun/src/reducers/index.js"],"names":["initState","data","state","action","type","randomIndex","Math","floor","random","keys","Object","value","objectToBeReturend","randomArr","valuesArr","key","j","push","newArr","Fruits","Animals","Colours","Numbers","mappedArr","map","item","id","itemsArr","splice","i"],"mappings":";;AAAA,IAAMA,SAAS,GAAG;AACjBC,EAAAA,IAAI,EAAG;AADU,CAAlB;AAIA,gBAAe,YAA6B;AAAA,MAA5BC,KAA4B,uEAAtBF,SAAsB;AAAA,MAAXG,MAAW;;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACC,SAAK,YAAL;AACA;AAAA,YACUC,WADV,GACC,SAASA,WAAT,GAAuB;AACtB,iBAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAP;AAEA,SAJF;;AAMC,YAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYN,MAAM,CAACQ,KAAnB,CAAb;AAEA,YAAMC,kBAAkB,GAAG,EAA3B;AACA,YAAIC,SAAS,GAAG,EAAhB;AACA,YAAIC,SAAS,GAAG,EAAhB;;AACA,8BAAiBL,IAAjB,eAAuB;AAAnB,cAAMM,GAAG,GAAIN,IAAJ,IAAT;AACHK,UAAAA,SAAS,GAAGX,MAAM,CAACQ,KAAP,CAAaI,GAAb,CAAZ;;AACA,eAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA2B;AAC1BH,YAAAA,SAAS,CAACI,IAAV,CAAeH,SAAS,CAACT,WAAW,EAAZ,CAAxB;AACA;;AACDO,UAAAA,kBAAkB,CAACG,GAAD,CAAlB,GAA0BF,SAA1B;AACAA,UAAAA,SAAS,GAAG,EAAZ;AACA;;AACD,YAAIK,MAAM,sBAAON,kBAAkB,CAACO,MAA1B,4BAAqCP,kBAAkB,CAACQ,OAAxD,sBAAoER,kBAAkB,CAACS,OAAvF,sBAAmGT,kBAAkB,CAACU,OAAtH,EAAV;;AAEA,YAAIC,SAAS,GAAGL,MAAM,CAACM,GAAP,CAAW,UAACC,IAAD,EAAMC,EAAN,EAAa;AACvC,mCACID,IADJ;AAECC,YAAAA,EAAE,EAAFA;AAFD;AAIA,SALe,CAAhB;AAOA,eAAO;AACNzB,UAAAA,IAAI,qBAAMC,KAAK,CAACD,IAAZ,4BAAqBsB,SAArB;AADE,SAAP;AAIA;;AACD,SAAK,SAAL;AAAgB;AACf,YAAMI,QAAQ,sBAAOzB,KAAK,CAACD,IAAb,CAAd;;AACA0B,QAAAA,QAAQ,CAACC,MAAT,CAAgBzB,MAAM,CAACuB,EAAvB,EAA2B,CAA3B;AACA,YAAIH,SAAS,GAAGI,QAAQ,CAACH,GAAT,CAAa,UAACC,IAAD,EAAMI,CAAN,EAAY;AACxC,mCACIJ,IADJ;AAECI,YAAAA,CAAC,EAADA;AAFD;AAIA,SALe,CAAhB;AAMA,iCACI3B,KADJ;AAECD,UAAAA,IAAI,EAAGsB;AAFR;AAIA;;AAED;AAAS,aAAOrB,KAAP;AAlDV;AAqDA,CAtDD","sourcesContent":["const initState = { \n\tdata : []\n}\n\nexport default (state=initState, action) => {\n\tswitch(action.type) {\n\t\tcase 'STORE_DATA':\n\t\t{\n\t\t\tfunction randomIndex() {\n\t\t\t\treturn Math.floor(Math.random() * 4);\n\t\t\t\t\n\t\t\t}\n\n\t\t\tconst keys = Object.keys(action.value);\n\t\t\t\n\t\t\tconst objectToBeReturend = {}\n\t\t\tvar randomArr = [];\n\t\t\tvar valuesArr = [];\n\t\t\tfor(const key of keys) {\n\t\t\t\tvaluesArr = action.value[key];\n\t\t\t\tfor(let j = 0; j < 2; j++) {\n\t\t\t\t\trandomArr.push(valuesArr[randomIndex()])\n\t\t\t\t}\n\t\t\t\tobjectToBeReturend[key] = randomArr;\n\t\t\t\trandomArr = []\n\t\t\t}\n\t\t\tvar newArr = [...objectToBeReturend.Fruits, ...objectToBeReturend.Animals, ...objectToBeReturend.Colours, ...objectToBeReturend.Numbers]\n\n\t\t\tvar mappedArr = newArr.map((item,id) => {\n\t\t\t\treturn {\n\t\t\t\t\t...item,\t\n\t\t\t\t\tid\n\t\t\t\t}\n\t\t\t})\n\n\t\t\treturn {\n\t\t\t\tdata: [...state.data, ...mappedArr]\n\t\t\t}\n\n\t\t}\n\t\tcase 'ON_DROP': {\n\t\t\tconst itemsArr = [...state.data];\n\t\t\titemsArr.splice(action.id, 1);\n\t\t\tvar mappedArr = itemsArr.map((item,i) => {\n\t\t\t\treturn {\n\t\t\t\t\t...item,\n\t\t\t\t\ti\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdata : mappedArr\n\t\t\t}\n\t\t}\n\t\t\n\t\tdefault: return state;\n\t\t\n\t}\n}"]},"metadata":{},"sourceType":"module"}