{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar react_1 = require(\"react\");\nvar invariant = require('invariant');\nfunction cloneWithRef(element, newRef) {\n  var previousRef = element.ref;\n  invariant(typeof previousRef !== 'string', 'Cannot connect React DnD to an element with an existing string ref. ' + 'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' + 'Read more: https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute');\n  if (!previousRef) {\n    // When there is no ref on the element, use the new ref directly\n    return react_1.cloneElement(element, {\n      ref: newRef\n    });\n  }\n  return react_1.cloneElement(element, {\n    ref: function (node) {\n      newRef(node);\n      if (previousRef) {\n        previousRef(node);\n      }\n    }\n  });\n}\nexports.default = cloneWithRef;","map":{"version":3,"names":["Object","defineProperty","exports","value","react_1","require","invariant","cloneWithRef","element","newRef","previousRef","ref","cloneElement","node","default"],"sources":["/Users/vishalgoswami/Documents/work/my-repo/kids-fun-game/node_modules/.pnpm/react-dnd@6.0.0_react@18.3.1/node_modules/react-dnd/lib/utils/cloneWithRef.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar invariant = require('invariant');\nfunction cloneWithRef(element, newRef) {\n    var previousRef = element.ref;\n    invariant(typeof previousRef !== 'string', 'Cannot connect React DnD to an element with an existing string ref. ' +\n        'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' +\n        'Read more: https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute');\n    if (!previousRef) {\n        // When there is no ref on the element, use the new ref directly\n        return react_1.cloneElement(element, {\n            ref: newRef,\n        });\n    }\n    return react_1.cloneElement(element, {\n        ref: function (node) {\n            newRef(node);\n            if (previousRef) {\n                previousRef(node);\n            }\n        },\n    });\n}\nexports.default = cloneWithRef;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC9B,IAAIC,SAAS,GAAGD,OAAO,CAAC,WAAW,CAAC;AACpC,SAASE,YAAYA,CAACC,OAAO,EAAEC,MAAM,EAAE;EACnC,IAAIC,WAAW,GAAGF,OAAO,CAACG,GAAG;EAC7BL,SAAS,CAAC,OAAOI,WAAW,KAAK,QAAQ,EAAE,sEAAsE,GAC7G,sFAAsF,GACtF,kGAAkG,CAAC;EACvG,IAAI,CAACA,WAAW,EAAE;IACd;IACA,OAAON,OAAO,CAACQ,YAAY,CAACJ,OAAO,EAAE;MACjCG,GAAG,EAAEF;IACT,CAAC,CAAC;EACN;EACA,OAAOL,OAAO,CAACQ,YAAY,CAACJ,OAAO,EAAE;IACjCG,GAAG,EAAE,SAAAA,CAAUE,IAAI,EAAE;MACjBJ,MAAM,CAACI,IAAI,CAAC;MACZ,IAAIH,WAAW,EAAE;QACbA,WAAW,CAACG,IAAI,CAAC;MACrB;IACJ;EACJ,CAAC,CAAC;AACN;AACAX,OAAO,CAACY,OAAO,GAAGP,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}